# Generated by Django 4.2.24 on 2025-09-29 03:41

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConversionResult',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('dsl_output', models.JSONField(blank=True, help_text='DSL输出结果', null=True)),
                ('token_report', models.JSONField(blank=True, default=dict, help_text='令牌使用报告', null=True)),
                ('llm_usage', models.JSONField(blank=True, help_text='LLM token 用量汇总', null=True)),
                ('project_download_path', models.CharField(blank=True, help_text='生成的前端项目压缩包存储路径', max_length=1024, null=True)),
            ],
            options={
                'verbose_name': '转换结果',
                'verbose_name_plural': '转换结果',
            },
        ),
        migrations.CreateModel(
            name='ConversionTask',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, help_text='任务名称', max_length=200, null=True)),
                ('source_type', models.CharField(choices=[('sketch', 'Sketch'), ('figma', 'Figma')], default='sketch', help_text='设计源类型', max_length=20)),
                ('source_url', models.URLField(blank=True, help_text='设计源URL (例如 Figma 链接)', null=True)),
                ('input_file', models.FileField(blank=True, help_text='输入的设计文件 (例如 Sketch 文件)', null=True, upload_to='conversion_inputs/')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('processing', '处理中'), ('completed', '已完成'), ('failed', '失败')], default='pending', help_text='任务状态', max_length=20)),
                ('progress', models.IntegerField(default=0, help_text='转换进度 (0-100)')),
                ('error_message', models.TextField(blank=True, help_text='错误信息')),
                ('started_at', models.DateTimeField(blank=True, help_text='开始时间', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='完成时间', null=True)),
                ('llm_usage', models.JSONField(blank=True, help_text='LLM token 用量汇总', null=True)),
                ('input_nodes', models.IntegerField(blank=True, help_text='输入的总节点数', null=True)),
                ('handled_nodes', models.IntegerField(blank=True, help_text='已处理的节点数', null=True)),
                ('hidden_nodes', models.IntegerField(blank=True, help_text='隐藏的的节点数', null=True)),
            ],
            options={
                'verbose_name': '转换任务',
                'verbose_name_plural': '转换任务',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='DesignTokens',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('name', models.CharField(help_text='令牌配置名称', max_length=100)),
                ('file', models.FileField(help_text='设计令牌JSON文件', upload_to='design_tokens/', validators=[django.core.validators.FileExtensionValidator(['json'])])),
            ],
            options={
                'verbose_name': '设计令牌',
                'verbose_name_plural': '设计令牌',
            },
        ),
    ]
